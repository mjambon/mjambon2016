# 1 "unmix.mll"
 
  let buf = Buffer.create 10000
  let add lexbuf = 
    Buffer.add_string buf (Lexing.lexeme lexbuf)
  let get () = 
    let s = Buffer.contents buf in
    Buffer.clear buf;
    s

# 12 "unmix.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\252\255\001\000\002\000\003\000\004\000\005\000\006\000\
    \007\000\252\255\253\255\008\000\009\000\010\000\254\255\013\000\
    ";
  Lexing.lex_backtrk = 
   "\255\255\255\255\002\000\002\000\002\000\255\255\001\000\000\000\
    \255\255\255\255\255\255\002\000\002\000\001\000\255\255\000\000\
    ";
  Lexing.lex_default = 
   "\002\000\000\000\002\000\255\255\255\255\255\255\255\255\255\255\
    \011\000\000\000\000\000\011\000\255\255\255\255\000\000\255\255\
    ";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\255\255\006\000\005\000\006\000\
    \007\000\007\000\012\000\255\255\013\000\015\000\004\000\255\255\
    \015\000\000\000\000\000\000\000\000\000\010\000\255\255\000\000\
    \014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\255\255\000\000\000\000\000\000\000\000\000\000\009\000\
    \255\255\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\002\000\003\000\004\000\005\000\
    \006\000\007\000\008\000\011\000\012\000\013\000\000\000\002\000\
    \015\000\255\255\255\255\255\255\255\255\008\000\011\000\255\255\
    \013\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\002\000\255\255\255\255\255\255\255\255\255\255\008\000\
    \011\000\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec code lexbuf =
    __ocaml_lex_code_rec lexbuf 0
and __ocaml_lex_code_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 11 "unmix.mll"
                     ( add lexbuf; code lexbuf )
# 117 "unmix.ml"

  | 1 ->
# 12 "unmix.mll"
                     ( let x = get () in
		       let sep = Lexing.lexeme lexbuf in
		       `Code x :: `Sep sep :: text lexbuf )
# 124 "unmix.ml"

  | 2 ->
# 16 "unmix.mll"
                     ( add lexbuf; code lexbuf )
# 129 "unmix.ml"

  | 3 ->
# 17 "unmix.mll"
                     ( [`Code (get ())] )
# 134 "unmix.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_code_rec lexbuf __ocaml_lex_state

and text lexbuf =
    __ocaml_lex_text_rec lexbuf 8
and __ocaml_lex_text_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 19 "unmix.mll"
                     ( add lexbuf; text lexbuf )
# 145 "unmix.ml"

  | 1 ->
# 20 "unmix.mll"
                     ( let x = get () in
		       let sep = Lexing.lexeme lexbuf in
		       `Text x :: `Sep sep :: code lexbuf )
# 152 "unmix.ml"

  | 2 ->
# 24 "unmix.mll"
                     ( add lexbuf; text lexbuf )
# 157 "unmix.ml"

  | 3 ->
# 25 "unmix.mll"
                     ( [`Text (get ())] )
# 162 "unmix.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_text_rec lexbuf __ocaml_lex_state

;;

# 26 "unmix.mll"
 
  let get lexbuf =
    Buffer.clear buf;
    text lexbuf

# 174 "unmix.ml"
